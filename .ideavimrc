set NERDTree
set easymotion
set sneak
set multiple-cursors
set surround
set ReplaceWithRegister
set argtextobj
set textobj-indent
set highlightedyank
set commentary
set vim-paragraph-motion

" Set leader key to space
let mapleader = " "

" Cursor in the middle of the screen
set scrolloff=999

" Set relative line number
set relativenumber

" Do incremental searching
set incsearch

" Use the OS clipboard
set clipboard=unnamed,unnamedplus

" Append IntelliJ clipboard
set clipboard+=ideaput

" Enable IntelliJ smart join
set ideajoin

" Ignore case of searches
set ignorecase

" When searching try to be smart about cases
set smartcase

" EasyMotion search key to backspace
map <BS> <Plug>(easymotion-s)

" Multiple cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" Insert blank line
nnoremap <Leader>o o<Esc>
nnoremap <Leader>O O<Esc>

" Y to yank the end of the line
nnoremap Y y$

" Cancel leader key sequence with <Esc> without jumping to a new line
nnoremap <Leader><Esc> :<C-u><CR>

nmap <Leader>: <Action>(RunAnything)

" File
nmap <Leader>ff <Action>(GotoFile)
vmap <Leader>ff <Action>(GotoFile)

nmap <Leader>fc <Action>(GotoClass)
vmap <Leader>fc <Action>(GotoClass)

nmap <Leader>fr <Action>(RecentFiles)
nmap <Leader>fe <Action>(RecentChangedFiles)

" Git
nmap <Leader>gf <Action>(Git.Fetch)
nmap <Leader>gb <Action>(Git.Branches)
nmap <Leader>gu <Action>(Vcs.UpdateProject)
nmap <Leader>ga <Action>(Annotate)
nmap <Leader>gp <Action>(Vcs.Push)
nmap <Leader>gl <Action>(Vcs.Show.Log)
nmap <Leader>gd <Action>(Compare.LastVersion)
nmap <Leader>gh <Action>(Vcs.ShowTabbedFileHistory)
nmap <Leader>go <Action>(Vcs.Show.Local.Changes)
nmap <Leader>gr <Action>(Vcs.RollbackChangedLines)

" Go to
nmap gb <Action>(Back)
nmap gf <Action>(Forward)
nmap gi <Action>(GotoImplementation)
nmap gt <Action>(GotoTypeDeclaration)
nmap gs <Action>(GotoSuperMethod)
nmap gT <Action>(GotoTest)
nmap ge <Action>(GotoNextError)
nmap gE <Action>(GotoPreviousError)

" Yank
nmap <Leader>yr <Action>(CopyReference)
nmap <Leader>yf <Action>(CopyFileName)

" Refactor
nmap <Leader>rr <Action>(RenameElement)
nmap <Leader>rv <Action>(IntroduceVariable)
nmap <Leader>rm <Action>(ExtractFunction)
nmap <Leader>rl <Action>(Refactorings.QuickListPopupAction)
nmap <Leader>sw <Action>(SurroundWith)

" Run
nmap <Leader>rt <Action>(RunClass)
nmap <Leader>rc <Action>(Run)
nmap <Leader>rk <Action>(Stop)
nmap <Leader>rs <Action>(ChooseRunConfiguration)
nmap <Leader>ro <Action>(ActivateRunToolWindow)

" Debug
nmap <Leader>dt <Action>(DebugClass)
nmap <Leader>do <Action>(ActivateDebugToolWindow)

" Code / Close
nmap <Leader>cg <Action>(Generate)
nmap <Leader>ch <Action>(ShowIntentionActions)
nmap <Leader>ct <Action>(CloseContent)
nmap <Leader>co <Action>(CloseAllEditorsButActive)
nmap <Leader>ca <Action>(HideAllWindows)
nmap <Leader>cc <Action>(HideAllWindows)<Action>(ActivateProjectToolWindow)

" Tree
nnoremap <Leader>to :NERDTree<CR>
nmap <Leader>tf <Action>(SelectInProjectView)

" Window
nmap <Leader>wv <Action>(SplitVertically)
nmap <Leader>ws <Action>(SplitVertically)
nmap <Leader>wh <Action>(SplitHorizontally)

" nmap <Leader>gh <Action>(LocalHistory.ShowHistory)

set which-key
set notimeout
